name: Build and Publish DEB Package

on:
  push:
    tags:
      - "apisix/*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  publish_apisix:
    name: Build and Publish deb Package
    strategy:
      fail-fast: false
      matrix:
        platform:
        - runner: ubuntu-22.04
          arch: amd64
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      VAR_DEB_WORKBENCH_DIR: /tmp/output
      VAR_COS_BUCKET_REPO: ${{ secrets.VAR_COS_BUCKET_REPO }}
      VAR_COS_BUCKET_CI: ${{ secrets.VAR_COS_BUCKET_CI }}
      VAR_OS: debian
      VAR_CODENAME: bullseye
      VAR_OS_RELEASE: bullseye-slim
      ARCH: amd64
      TAG_TYPE: apisix
      TAG_VERSION: 3.11.0

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.5
        with:
          submodules: recursive

      - name: Init basic publish env
        run: |
          sudo apt-get update
          mkdir -p "${VAR_DEB_WORKBENCH_DIR}"
      - name: Cache
        uses: actions/cache@v3.4.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-apisix-${{ env.TAG_VERSION }}
      - name: Extract Tags version
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: |
          echo "TAG_VERSION=3.11.0" >> "$GITHUB_ENV"

      - name: Extract Tags Type
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: |
          type=$(echo ${GITHUB_REF} | awk -F '/' '{print $3}')
          echo "TAG_TYPE=apisix" >> "$GITHUB_ENV"

      - name: Check Tags Type
        if: ${{ env.TAG_TYPE != 'apisix' && env.TAG_TYPE != 'apisix-base' }}
        run: |
          echo "##[error]Tag type is not correct, or not support, please check it."
          exit 1

      - name: Build apisix-base deb Package
        if: ${{ env.TAG_TYPE == 'apisix-base' }}
        run: |
          make package type=deb app=${TAG_TYPE} checkout=${TAG_VERSION} version=${TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE} openresty=apisix-base
          mv ./output/${TAG_TYPE}_${TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_${ARCH}.deb ${VAR_DEB_WORKBENCH_DIR}

      - name: Build apisix deb Package
        if: ${{ env.TAG_TYPE == 'apisix' }}
        run: |
          APISIX_PACKAGE_NAME=apisix
          APISIX_RUNTIME=1.2.2
          make package type=deb app=${TAG_TYPE} checkout=${TAG_VERSION} version=${TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE} openresty=apisix-runtime runtime_version=${APISIX_RUNTIME}
          mv ./output/${TAG_TYPE}_${TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_${ARCH}.deb ${VAR_DEB_WORKBENCH_DIR}

      - name: Build apisix-runtime deb Package
        if: ${{ env.TAG_TYPE == 'apisix-runtime' }}
        run: |
          echo build ${TAG_TYPE} deb package
          echo version ${TAG_VERSION}

          make package type=deb app=${TAG_TYPE} checkout=${TAG_VERSION} version=${TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE} openresty=apisix-runtime
          mv ./output/${TAG_TYPE}_${TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_${ARCH}.deb ${VAR_DEB_WORKBENCH_DIR}

      - name: Upload apisix/apisix-runtime/apisix-base Artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: "${{ env.TAG_TYPE }}_${{ env.TAG_VERSION }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_${{ env.ARCH }}.deb"
          path: "${{ env.VAR_DEB_WORKBENCH_DIR }}/${{ env.TAG_TYPE}}_${{ env.TAG_VERSION }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_${{ env.ARCH }}.deb"



